/*
 * pthread (generating a thread) example for Arm(Armv8 aarch64)/Linux
 *
 *   * Threads
 *      * main:  a main thread
 *      * child: a child thread (generated by pthread_create)
 *
 *   * see:
 *     * man pthread_create
 *     * man pthread_join
 */

        .globl  main

main:
        /* puts for trace-log */
        adr     x0, fmtMain_start
        bl      puts


        /* create a thread with pthread_create() */
        adr     x0, tid                 /* pthread_t: &tid       */
        mov     x1, 0                   /* pthread_attr_t: NULL  */
        adr     x2, child               /* start_routine: &child */
        mov     x3, 0                   /* arg: NULL             */
        bl      pthread_create


        /* wait the thread with pthread_join() */
        adr     x10, tid
        ldr     x0, [x10]               /* pthread_t: tid */
        mov     x1, 0                   /* retval: NULL   */
        bl      pthread_join


        /* puts for trace-log */
        adr     x0, fmtMain_finish
        bl      puts

        /* exit from main */
        mov     x0, 0                   /* status: EXIT_SUCCESS */
        bl    exit




        /* a child thread */
child:
        stp     x29, x30, [sp, -16]!

        /* puts for trace-log */
        adr     x0, fmtChild
        bl      puts


        /* finish this thead */
        mov     x0, 0                   /* return value (not used) */
        ldp     x29, x30, [sp], 16
        ret



        /* read-only data */
        .section .rodata
fmtMain_start:
        .string "main(): start"
fmtMain_finish:
        .string "main(): finish"
fmtChild:
        .string "child(): start"



        /* read-write data */
        .data
        .balign 8
tid:
        .quad   0
