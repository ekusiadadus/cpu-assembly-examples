/*
 * pthread (generating a thread) example for x86/Linux
 *
 *   * Threads
 *      * main:  a main thread
 *      * child: a child thread (generated by pthread_create)
 *
 *   * see:
 *     * man pthread_create
 *     * man pthread_join
 *     * x86-64 ABI (https://gitlab.com/x86-psABIs/x86-64-ABI)
 */

        .intel_syntax noprefix
        .globl  main

main:
        sub     rsp, 8                  /* 16byte align */

        /* puts for trace-log */
        lea     rdi, [rip + fmtMain1]
        call    puts


        /* create a thread with pthread_create() */
        lea     rdi, [rip + tid]        /* pthread_t: &tid       */
        mov     esi, 0                  /* pthread_attr_t: NULL  */
        lea     rdx, [rip + child]      /* start_routine: &child */
        mov     ecx, 0                  /* arg: NULL             */
        call    pthread_create

        /* wait the thread with pthread_join() */
        mov     rdi, [rip + tid]        /* pthread_t: tid */
        mov     esi, 0                  /* retval: NULL   */
        call    pthread_join


        /* puts for trace-log */
        lea     rdi, [rip + fmtMain2]
        call    puts

        /* exit from main */
        mov     edi, 0                  /* status: EXIT_SUCCESS */
        call    exit



        /* a child thread */
child:
        sub     rsp, 8                  /* 16byte align */

        /* puts for trace-log */
        lea     rdi, [rip + fmtChild]
        call    puts

        /* finish this thead */
        mov     eax, 0                  /* return value */
        add     rsp, 8
        ret



        /* read-only data */
        .section .rodata
fmtMain1:
        .string "main(): start"
fmtMain2:
        .string "main(): finish"
fmtChild:
        .string "child(): start"



        /* read-write data */
        .data
        .balign 8
tid:
        .quad   0
